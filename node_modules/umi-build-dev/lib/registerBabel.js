"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addBabelRegisterFiles = addBabelRegisterFiles;
exports.default = _default;

var _path = require("path");

var _pathIsAbsolute = _interopRequireDefault(require("path-is-absolute"));

var _registerBabel = _interopRequireDefault(require("af-webpack/registerBabel"));

var _lodash = _interopRequireDefault(require("lodash.flatten"));

var _umiUtils = require("umi-utils");

var _constants = require("./constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

let files = null;

function initFiles() {
  if (files) return;
  const env = process.env.UMI_ENV;
  files = [...(0, _lodash.default)(_constants.CONFIG_FILES.concat('config/').map(file => [file, ...(env ? [file.replace(/\.js$/, `.${env}.js`)] : []), file.replace(/\.js$/, `.local.js`)]))];
}

function addBabelRegisterFiles(extraFiles) {
  initFiles();
  files.push(...extraFiles);
}

function _default(opts = {}) {
  initFiles();
  const cwd = opts.cwd;
  const only = files.map(f => {
    const fullPath = (0, _pathIsAbsolute.default)(f) ? f : (0, _path.join)(cwd, f);
    return (0, _umiUtils.winPath)(fullPath);
  });
  (0, _registerBabel.default)({
    // only suport glob
    // ref: https://babeljs.io/docs/en/next/babel-core.html#configitem-type
    only,
    babelPreset: [require.resolve('babel-preset-umi'), {
      transformRuntime: false
    }]
  });
}